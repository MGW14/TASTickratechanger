buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = "1.0.13"
group = "me.guichaguri.tickratechanger"
archivesBaseName = "TickrateChanger"

minecraft {
    version = "1.12.2-14.23.0.2486"
    runDir = "run"
    mappings = "snapshot_20170624"
}
configurations {
    bundled
    provided
    // Make compile extend from our provided configuration so that things added to bundled end up on the compile classpath
    compile.extendsFrom(bundled)
}
repositories {
    mavenCentral()
    maven {
        name = 'sponge'
        url = 'http://repo.spongepowered.org/maven'
    }
}
jar {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest {
        attributes 'FMLCorePlugin': 'me.guichaguri.tickratechanger.TickrateChanger',
                   'FMLCorePluginContainsFMLMod': 'true',
                   'FMLAT': 'tickratechanger_at.cfg',
                   'MixinConfigs': 'mixins.tas.json',
                   'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                   'ForceLoadAsMod': 'true'
    }
}

dependencies {
    compile('org.spongepowered:mixin:0.7.10-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
sourceSets {
    main {
        ext.refMap = "mixins.tas.refmap.json"
    }
}
mixin {
    // Specify "notch" or "searge" here
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.tas.refmap.json"
}